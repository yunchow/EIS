<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eis.base.domain.repository.RoleRepository">
	<cache></cache>
	<resultMap type="hashmap" id="resultMap">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="text" column="name"/>
		<collection property="rolemenus" ofType="hashmap" javaType="ArrayList">
			<id column="mid" property="id"/>
		</collection>
	</resultMap>
	
	<resultMap type="hashmap" id="menuTreeMap">
		<id column="id" property="id"/>
	</resultMap>
	
	<delete id="deleteRoleMenu" parameterType="string">
		delete from sys_rolemenu where rid = #{id}
	</delete>
	
	<insert id="saveRoleMenu" parameterType="list">
		insert into sys_rolemenu(rid, mid)
		values
		<foreach collection="list" item="each" separator=",">
			(#{each.rid}, #{each.mid})
		</foreach>
	</insert>
	
	<select id="findAllMenu" resultMap="menuTreeMap">
		select id, pid, name from sys_menuitem
	</select>
	
	<select id="findByPage" parameterType="hashmap" resultMap="resultMap">
		select t1.*, t2.* from sys_role t1 left outer join sys_rolemenu t2
		on t1.id = t2.rid
		<if test="name != null">
			where name like #{name} 
		</if>
		order by name
	</select>
	
	<select id="findTotalCount" resultType="int">
		select count(*) from sys_role
		<if test="name != null">
			where name like #{name} 
		</if>
	</select>
	
	<select id="findById" parameterType="String" resultMap="resultMap">
		select * from sys_role where id = #{id}
	</select>
	
	<insert id="save" parameterType="hashmap">
		insert into 
			sys_role(id, name, comment) 
		values 
			(#{id}, #{name}, #{comment})
	</insert>
	
	<update id="update">
		update sys_role
		set name = #{name}, comment = #{comment}
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from sys_role where id=#{id}
	</delete>

</mapper>