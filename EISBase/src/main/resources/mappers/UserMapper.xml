<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eis.base.domain.repository.UserRepository">
	<resultMap type="hashmap" id="resultMap">
		<id property="id" column="id"/>
		<result column="name" property="name"/>
		<result column="true_name" property="trueName"/>
		<result column="password" property="password"/>
		<result column="gender" property="gender"/>
		<result column="status" property="status"/>
		<result column="comment" property="comment"/>
		<result column="field1" property="field1"/>
		<result column="field2" property="field2"/>
		<result column="field3" property="field3"/>
		<collection property="userroles" ofType="hashmap" javaType="ArrayList">
			<id column="role_id" property="id"/>
		</collection>
	</resultMap>
	
	<resultMap type="hashmap" id="roleMap">
		<id column="id" property="id"/>
		<id column="name" property="name"/>
		<id column="name" property="text"/>
	</resultMap>
	
	<resultMap type="hashmap" id="allUsersMap">
		<id column="id" property="id"/>
		<id column="true_name" property="name"/>
		<id column="true_name" property="text"/>
	</resultMap>
	
	<resultMap type="com.eis.base.dto.User" id="userGroupResult">
		<id property="id" column="id"/>
		<result column="name" property="name"/>
		<result column="true_name" property="trueName"/>
		<result column="password" property="password"/>
		<collection property="groups" ofType="org.activiti.engine.impl.persistence.entity.GroupEntity" javaType="ArrayList">
			<id column="id_" property="id"/>
			<id column="name_" property="name"/>
		</collection>
	</resultMap>
	
	<select id="findUserByNameAndPassword" parameterType="com.eis.base.dto.User" resultMap="userGroupResult">
		select * from sys_user u 
		left outer join act_id_membership m on m.user_id_ = u.id
		left outer join act_id_group g on g.id_ = m.group_id_
		where u.name = #{name}
	</select>
	
	<select id="findGroupsByUser" parameterType="String" resultType="org.activiti.engine.impl.persistence.entity.GroupEntity">
		select g.id_ id, g.name_ name from act_id_group g 
		inner join act_id_membership m on m.group_id_ = g.id_ 
		where  m.user_id_ = #{userId}
	</select>
	
	<select id="findAllUser" resultMap="allUsersMap">
		select id, true_name from sys_user 
	</select>
	
	<delete id="deleteUserRole" parameterType="string">
		delete from sys_userrole where user_id = #{id}
	</delete>
	
	<insert id="saveUserRole" parameterType="list">
		insert into sys_userrole(user_id, role_id)
		values
		<foreach collection="list" item="each" separator=",">
			(#{each.userId}, #{each.roleId})
		</foreach>
	</insert>
	
	<select id="findAllRole" resultMap="roleMap">
		select * from sys_role
	</select>
	
	<select id="findByPage" parameterType="hashmap" resultMap="resultMap">
		select t1.*, t2.* from sys_user t1 left outer join sys_userrole t2
		on t1.id = t2.user_id
		<if test="name != null">
			where name like #{name} or true_name like #{name}
		</if>
		order by name
	</select>
	
	<select id="findTotalCount" resultType="int">
		select count(*) from sys_user
		<if test="name != null">
			where name like #{name} or true_name like #{name}
		</if>
	</select>
	
	<select id="findById" parameterType="String" resultMap="resultMap">
		select * from sys_user where id = #{id}
	</select>
	
	<insert id="save" parameterType="hashmap">
		insert into sys_user 
			(id, name, password, true_name, gender, comment, status, field1, field2, field3) 
		values 
		    (#{id}, #{name}, #{password}, #{trueName}, #{gender}, #{comment}, #{status}, #{field1}, #{field2}, #{field3})
	</insert>
	
	<update id="update">
		update sys_user set
			name = #{name}, password = #{password}, true_name = #{trueName}, gender = #{gender}, comment = #{comment}, 
			status = #{status}, field1 = #{field1}, field2 = #{field2}, field3 = #{field3}
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from sys_user where id=#{id}
	</delete>

</mapper>